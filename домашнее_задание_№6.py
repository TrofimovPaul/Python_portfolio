# -*- coding: utf-8 -*-
"""Домашнее задание №6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1syoVrPpU4zT4dBufnj2ohrCjJaO2MAgo
"""

"""
Задание 1
Печатные газеты использовали свой формат дат для каждого выпуска. Для каждой газеты из списка напишите формат указанной даты для перевода в объект datetime:
The Moscow Times - Wednesday, October 2, 2002
The Guardian - Friday, 11.10.13
Daily News - Thursday, 18 August 1977
"""
newspaper_name = input('Enter the name (The Moscow Times, The Guardian or Daily News): ')

#newspaper_name = 'The Moscow Times'

date = input('Enter the date like in newspaper:')
#date = 'Wednesday, October 2, 2002'
#date = 'Friday, 11.10.13'

date_list = {}
from datetime import datetime
newspapers_format = {}
newspapers_format['The Moscow Times'] = '%A, %B %d, %Y'
newspapers_format['The Guardian'] = '%A, %d.%m.%y'
newspapers_format['Daily News'] = '%A, %d %B %Y'
for k, v in newspapers_format.items():
  try:
    if newspaper_name == k:
      date_list[k] = datetime.strptime(date, v)
      print(date_list[k])
  except:
    print('В выбранной газете дата указывается в ином формате')
    answer = input('Всё равно перевести дату? Y/N: ')
    if answer == 'Y':
      for val in newspapers_format.values():
        try:    
          date_list[k] = datetime.strptime(date, val)
          print(date_list[k])
        except:
          continue

"""
Задание 2
Дан поток дат в формате YYYY-MM-DD, в которых встречаются некорректные значения:
Напишите функцию, которая проверяет эти даты на корректность. 
Т. е. для каждой даты возвращает True (дата корректна) или False (некорректная дата).
"""
stream = ['2018-04-02', '2018-02-29', '2018-19-02']
#stream = ['2018-04-32', '2018-02-20', '2018-19-02']
from datetime import datetime
def date_test(new_date):
  try:
    new_date = datetime.strptime(new_date, '%Y-%m-%d')
    answer = True
  except:  
    answer = False
  return answer
errors = open('errors.csv', 'w')
errors.write('Значение, Номер в списке\n')
for i in range(len(stream)):
  if date_test(stream[i]) == False:
    print('Некорректная дата')
    line = f'{stream[i]},{i}\n'
    errors.write(line)
  else:
    print('Корректная дата')
errors.close()
errors = open('errors.csv', 'r')
errors.readlines()
errors.close()

"""
Задание 3
Напишите функцию date_range, которая возвращает список дат за период от start_date до end_date. 
Даты должны вводиться в формате YYYY-MM-DD. В случае неверного формата или при start_date > end_date должен возвращаться пустой список.
"""
from datetime import datetime
from datetime import timedelta
def date_range(start_date, end_date):
  if start_date > end_date:
    print('Некорректные данные')
  else:
    start_date = datetime.strptime(start_date, '%Y-%m-%d')    
    end_date = datetime.strptime(end_date, '%Y-%m-%d')
    while start_date <= end_date:
      print(start_date.strftime('%Y-%m-%d'))
      start_date += timedelta(days=1)
      
date_range('1234-02-30', '1234-02-31')

"""
Задание 3 ИСПРАВЛЕННОЕ
Напишите функцию date_range, которая возвращает список дат за период от start_date до end_date. 
Даты должны вводиться в формате YYYY-MM-DD. В случае неверного формата или при start_date > end_date должен возвращаться пустой список.
"""
from datetime import datetime
from datetime import timedelta
def date_range(start_date, end_date):
  if start_date <= end_date:
    try:
      start_date = datetime.strptime(start_date, '%Y-%m-%d')    
      end_date = datetime.strptime(end_date, '%Y-%m-%d')
      while start_date <= end_date:
        print(start_date.strftime('%Y-%m-%d'))
        start_date += timedelta(days=1)
    except:
      print('Некорректные данные')
  else:
    print('Некорректные данные')
date_range('1234-47-12', '1234-04-30')

"""
Задание 4 (необязательное)
Ваш коллега прислал код функции:
"""
DEFAULT_USER_COUNT = 3

def delete_and_return_last_user(region, default_list=['A100','A101', 'A102']):
  """
  Удаляет из списка default_list последнего пользователя
  и возвращает ID нового последнего пользователя.
  """
  element_to_delete = default_list[-1]
  default_list.remove(element_to_delete)
  return default_list[DEFAULT_USER_COUNT-2]

#При однократном вызове этой функции все работает корректно:
delete_and_return_last_user(1)
#'A101'
delete_and_return_last_user(1)
"""
Однако, при повторном вызове получается ошибка IndexError: list index out of range.
Задание:
  Что значит ошибка list index out of range?
"""
#Ошибка говорит о том, что элемента с нужным индексом нет в списке (величина списка меньше, чем требуется)
"""
  Почему при первом запуске функция работает корректно, а при втором - нет?
"""
#В первом вызове удаляется третий элемент списка с индексом 2, после чего вызывается элемент с индексом 1
#После второго вызова удаляется второй элемент списка с индексом 1, 
#после чего программа пытается вызвать элемент с тем же индексом 1, но он уже удалён. Возможный вариант решение ниже

def delete_and_return_last_user(region, default_list=['A100','A101', 'A102']):
  print(default_list)
  element_to_delete = default_list[-1]
  default_list.remove(element_to_delete)
  print(default_list)
  return print(default_list[-1])


delete_and_return_last_user(1)
delete_and_return_last_user(1)
#delete_and_return_last_user(1) #здесь возникнет ошибка, так как список пуст

