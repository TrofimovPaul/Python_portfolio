# -*- coding: utf-8 -*-
"""Домашняя работа №3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WkWFv2uwd3YjT0hdu-ibFrtwfEjmn2lN
"""

"""
Домашнее задание к лекции "Введение в типы данных и циклы. Часть 2"
Задание 1

Дана переменная, в которой хранится словарь, содержащий гео-метки для каждого пользователя (пример структуры данных приведен ниже). 
Вам необходимо написать программу, которая выведет на экран множество уникальных гео-меток всех пользователей.
"""

ids = {'user1': [213, 213, 213, 15, 213], 
       'user2': [54, 54, 119, 119, 119], 
       'user3': [213, 98, 98, 35]}
a = []
for value in ids.values():
  for i in range(len(value)):
    a.append(value[i])
print(set(a))

"""
Задание 2

Дана переменная, в которой хранится список поисковых запросов пользователя (пример структуры данных приведен ниже). 
Вам необходимо написать программу, которая выведет на экран распределение количества слов в запросах в требуемом виде.
"""

queries = [
    'смотреть сериалы онлайн',
    'новости спорта',
    'афиша кино',
    'курс доллара',
    'сериалы этим летом',
    'курс по питону',
    'сериалы про спорт',
]

#находим максимальное количество слов в запросе
num  = []
for i in range(len(queries)):
  num.append(queries[i].count(' '))
print('Максимальное количество слов в запросе: ', max(num)+1)

#создаём список с необходимым количеством переменных (каждая переменная будет списком)
c = ['a'+str(i) for i in range(max(num)+1)]
for i in range(len(c)):
  c[i] = []
  
#в каждую созданную переменную записываем значения согласно условию (m - кол-во слов в запросе (принимает значения от 0 до МАХ, посчитанного выше))
for i in range(len(queries)):
  for m in range(max(num)+1):
    if queries[i].count(' ') == m:
      c[m].append(queries[i].count(' '))

#для каждого количества слов выводим свою строку с результатом. Если запросов с каким-то количеством слов не найдено, то такая строка игнорируется
for m in range(max(num)+1):
  if len(c[m])!=0:
    print(f'Поисковых запросов, содержащих {m+1} слов(a): {len(c[m])} ({round(len(c[m])*100/len(queries),2)}%)')

#list comprehension
#[print(f'Поисковых запросов, содержащих {m+1} слов(a): {len(c[m])} ({round(len(c[m])*100/len(queries),2)}%)') for m in range(max(num)+1) if len(c[m])!=0]
    

#программа немного работает некорректно, так как считает слова по количеству пробелов, а потому при добавлении лишнего пробела в запросе меняется и количество слов в результате

"""
Задание 3

Дана переменная, в которой хранится информация о затратах и доходе рекламных кампаний по различным источникам. 
Необходимо дополнить исходную структуру показателем ROI, который рассчитаем по формуле: (revenue / cost - 1) * 100
"""

results = {
    'vk': {'revenue': 103, 'cost': 98},
    'yandex': {'revenue': 179, 'cost': 153},
    'facebook': {'revenue': 103, 'cost': 110},
    'adwords': {'revenue': 35, 'cost': 34},
    'twitter': {'revenue': 11, 'cost': 24},
}
for key, value in results.items():
  value['ROI'] = round((value['revenue']/value['cost']-1)*100, 2)
results

"""
Задание 4

Дана переменная, в которой хранится статистика рекламных каналов по объемам продаж (пример структуры данных приведен ниже). 
Напишите программу, которая возвращает название канала с максимальным объемом продаж.
"""

stats = {'facebook': 55, 'yandex': 115, 'vk': 120, 'google': 95, 'email': 42, 'ok': 98}

a = 0
for key, value in stats.items():
  if value >= a:
    a = value
    b = key
  else:
    continue
print(f'Максимальный объём продаж ({a}) на рекламном канале: {b}')

"""
Задание 5 (необязательно)

Дан список произвольной длины. 
Необходимо написать код, который на основе исходного списка составит словарь такого уровня вложенности, какова длина исхондого списка.
"""
my_list = []
question = int(input('Хотите добавить значения в список? 1 = Yes, 0 = No : '))
while question != 0:
  my_list.append(input('Введите значение: '))
  question = int(input('Хотите добавить значения в список? 1 = Yes, 0 = No : '))
#Для проверки
my_list = ['a', 'b', 'c', 'd', 'e', 'f']
#print(len(my_list))
new_dict = {}
if len(my_list) > 1:
  #print(new_dict)
  new_dict[my_list[-2]] = my_list[-1]
  #print(new_dict)
  for i in range(-1, -len(my_list)-1, -1):
    if (i-2) < -len(my_list):
      break
    new_dict[my_list[i-2]] = dict(new_dict) 
    #print(new_dict)
    del(new_dict[my_list[i-1]])
    #print(new_dict)
else:
  new_dict[my_list[0]] = 'Empty'
  print(new_dict)
print(new_dict)

"""
Задание 6 (необязательно)

Дана книга рецептов с информацией о том, сколько ингредиентов нужно для приготовления блюда в расчете на одну порцию (пример данных представлен ниже).
Напишите программу, которая будет запрашивать у пользователя количество порций для приготовления этих блюд
и отображать информацию о суммарном количестве требуемых ингредиентов в указанном виде.
Внимание! Одинаковые ингредиенты с разными размерностями нужно считать раздельно!
"""


cook_book = {
  'салат': [
     {'ingredient_name': 'сыр', 'quantity': 50, 'measure': 'гр'},
     {'ingredient_name': 'томаты', 'quantity': 2, 'measure': 'шт'},
     {'ingredient_name': 'огурцы', 'quantity': 20, 'measure': 'гр'},
     {'ingredient_name': 'маслины', 'quantity': 10, 'measure': 'гр'},
     {'ingredient_name': 'оливковое масло', 'quantity': 20, 'measure': 'мл'},
     {'ingredient_name': 'салат', 'quantity': 10, 'measure': 'гр'},
     {'ingredient_name': 'перец', 'quantity': 20, 'measure': 'гр'}
    ],
  'пицца': [
     {'ingredient_name': 'сыр', 'quantity': 20, 'measure': 'гр'},
     {'ingredient_name': 'колбаса', 'quantity': 30, 'measure': 'гр'},
     {'ingredient_name': 'бекон', 'quantity': 30, 'measure': 'гр'},
     {'ingredient_name': 'оливки', 'quantity': 10, 'measure': 'гр'},
     {'ingredient_name': 'томаты', 'quantity': 20, 'measure': 'гр'},
     {'ingredient_name': 'тесто', 'quantity': 100, 'measure': 'гр'},   
    ],
  'лимонад': [
     {'ingredient_name': 'лимон', 'quantity': 1, 'measure': 'шт'},
     {'ingredient_name': 'вода', 'quantity': 200, 'measure': 'мл'},
     {'ingredient_name': 'сахар', 'quantity': 10, 'measure': 'гр'},
     {'ingredient_name': 'лайм', 'quantity': 20, 'measure': 'гр'},    
    ]
}

quantity = input('Введите количество порций: ')
a = []
b =[]
for dishes in cook_book.values():
  for ingredients in dishes:
    for i in ingredients.values():
      a.append(i)
for i in range(0,len(a),3):
  a[i+1] = int(a[i+1])*int(quantity)
  if a[i] in b and a[i+2] == b[b.index(a[i])+2]:
    b[b.index(a[i])+1] = int(b[b.index(a[i])+1]) + int(a[i+1])
  else:
    b.append(a[i])
    b.append(a[i+1])
    b.append(a[i+2])
print ('Необходимое количество ингредиентов: ')
for i in range(0, len(b), 3):
  print(f'{b[i].capitalize()} - {b[i+1]} {b[i+2]}.')